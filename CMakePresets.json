{
  "version": 6,
  "configurePresets": [
    {
      "name": "generic",
      "displayName": "Generic",
      "description": "Generic build with Ninja Multi-Config and vcpkg",
      "generator": "Ninja Multi-Config",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "ON",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_CONFIGURATION_TYPES": "Release;RelWithDebInfo;Debug",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        }
      }
    },
    {
      "name": "windows-x64",
      "displayName": "Windows (x64)",
      "description": "Build with MSVC for x64 Windows",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "architecture": {
        "value": "x64",
        "strategy": "external"
      },
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "ON",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "ON",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS": "ON",
        "FORFUN_COMMON_CFLAGS": "/permissive- /source-charset:utf-8 /W4 /Zc:__cplusplus",
        "FORFUN_COMMON_CXXFLAGS": "/permissive- /source-charset:utf-8 /W4 /Zc:__cplusplus /Zc:enumTypes /Zc:preprocessor"
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "xcode",
      "displayName": "Xcode configuration",
      "description": "Build with Xcode for Darwin",
      "generator": "Xcode",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "ON",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "CMAKE_XCODE_XCCONFIG": {
          "value": "${sourceDir}/vendor/XcodeWarnings/XcodeWarnings.xcconfig",
          "type": "FILEPATH"
        },
        "COMPILE_DEFINITIONS": "_LIBCPP_ABI_FIX_CITYHASH_IMPLEMENTATION"
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Darwin"
      }
    },
    {
      "name": "strict-gcc",
      "displayName": "Strict GCC options",
      "description": "Build with GCC and enable most GCC diagnostics",
      "generator": "Ninja Multi-Config",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "ON",
        "CMAKE_C_FLAGS": "-pedantic -Wall -Wextra -Walloc-zero -Wcast-align=strict -Wcast-qual -Wconversion -Wdate-time -Wdisabled-optimization -Wdouble-promotion -Wduplicated-branches -Wduplicated-cond -Wformat=2 -Wformat-overflow=2 -Wformat-truncation=2 -Wimplicit-fallthrough=5 -Winit-self -Wlogical-op -Wmisleading-indentation -Wmissing-declarations -Wmissing-noreturn -Wmissing-prototypes -Wmultichar -Wnested-externs -Wnonnull -Wnull-dereference -Wold-style-definition -Wopenacc-parallelism -Wpacked -Wpacked-bitfield-compat -Wpointer-arith -Wredundant-decls -Wreturn-type -Wsequence-point -Wshadow=global -Wshift-negative-value -Wsign-conversion -Wstrict-overflow=5 -Wstrict-prototypes -Wswitch -Wswitch-enum -Wtrampolines -Wundef -Wunused -Wunused-macros -Wunused-parameter -Wunused-variable -Wvla -Wwrite-strings -Wzero-as-null-pointer-constant -Wunsafe-loop-optimizations -fstack-protector-strong -fstrict-flex-arrays -fanalyzer",
        "CMAKE_CXX_FLAGS": "-pedantic -Wall -Wextra -Wcast-align=strict -Wcast-qual -Wconversion -Wctor-dtor-privacy -Wdangling-pointer -Wdangling-reference -Wdate-time -Wdelete-non-virtual-dtor -Wdeprecated-copy -Wdeprecated-enum-enum-conversion -Wdeprecated-enum-float-conversion -Wdouble-promotion -Wduplicated-branches -Wduplicated-cond -Wformat=2 -Wimplicit-fallthrough=5 -Winaccessible-base -Winherited-variadic-ctor -Winit-list-lifetime -Winit-self -Winvalid-constexpr -Winvalid-offsetof -Wlogical-op -Wmisleading-indentation -Wmismatched-new-delete -Wmismatched-tags -Wmissing-declarations -Wmissing-noreturn -Wmissing-requires -Wmultichar -Wnarrowing -Wnon-template-friend -Wnon-virtual-dtor -Wnull-dereference -Wold-style-cast -Woverlength-strings -Woverloaded-virtual -Wpacked -Wpacked-bitfield-compat -Wrange-loop-construct -Wredundant-decls -Wredundant-move -Wredundant-tags -Wreorder -Wself-move -Wshadow=global -Wshift-negative-value -Wsign-conversion -Wsign-promo -Wsized-deallocation -Wstack-protector -Wstrict-null-sentinel -Wstrict-overflow=2 -Wunused -Wunused-macros -Wuseless-cast -Wvariadic-macros -Wvector-operation-performance -Wvexing-parse -Wvirtual-move-assign -Wvla -Wwrite-strings -Wzero-as-null-pointer-constant -Walloc-zero -Wunsafe-loop-optimizations",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_CONFIGURATION_TYPES": "Release;RelWithDebInfo;Debug",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        }
      }
    },
    {
      "name": "strict-clang",
      "displayName": "Strict Clang options",
      "description": "Build with Clang and enable most Clang diagnostics",
      "generator": "Ninja Multi-Config",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "ON",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_CONFIGURATION_TYPES": "Release;RelWithDebInfo;Debug",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "FORFUN_COMMON_CFLAGS": "-pedantic -Wall -Warray-bounds-pointer-arithmetic -Warray-parameter -Watomic-implicit-seq-cst -Wbitfield-enum-conversion -Wbitwise-op-parentheses -Wbool-conversion -Wcast-align -Wcast-qual -Wcomplex-component-init -Wconditional-uninitialized -Wconversion -Wcovered-switch-default -Wdeprecated -Wdouble-promotion -Wextra -Wfloat-equal -Wformat=2 -Wframe-address -Wimplicit-fallthrough -Wimplicit-float-conversion -Wimplicit-int-conversion -Wimplicit-int-float-conversion -Winit-self -Winline -Winvalid-offsetof -Wliteral-conversion -Wliteral-range -Wlogical-op-parentheses -Wmisleading-indentation -Wmissing-braces -Wmissing-declarations -Wmissing-include-dirs -Wmissing-noreturn -Wmissing-prototypes -Wnull-dereference -Wnull-pointer-arithmetic -Wold-style-cast -Wpacked -Wpacked-non-pod -Wparentheses -Wpointer-arith -Wredundant-parens -Wshadow-all -Wsign-compare -Wsign-conversion -Wsometimes-uninitialized -Wstack-protector -Wstrict-overflow=5 -Wswitch-default -Wswitch-enum -Wtautological-compare -Wtautological-constant-in-range-compare -Wunaligned-access -Wundef -Wuninitialized -Wunreachable-code -Wunreachable-code-aggressive -Wunsequenced -Wunused -Wunused-macros -Wunused-parameter -Wunused-variable -Wzero-as-null-pointer-constant",
        "FORFUN_COMMON_CXXFLAGS": "-pedantic -Wall -Warray-bounds-pointer-arithmetic -Warray-parameter -Watomic-implicit-seq-cst -Wbitfield-enum-conversion -Wbitwise-op-parentheses -Wbool-conversion -Wbool-operation -Wcast-align -Wcast-function-type -Wcast-qual -Wcomplex-component-init -Wconditional-uninitialized -Wconversion -Wcovered-switch-default -Wdelete-non-virtual-dtor -Wdeprecated -Wdouble-promotion -Wdynamic-exception-spec -Wexit-time-destructors -Wextra -Wfloat-equal -Wfor-loop-analysis -Wformat=2 -Wframe-address -Wglobal-constructors -Wimplicit-fallthrough -Wimplicit-float-conversion -Wimplicit-int-conversion -Wimplicit-int-float-conversion -Winit-self -Winline -Winvalid-offsetof -Wliteral-conversion -Wliteral-range -Wlogical-op-parentheses -Wloop-analysis -Wmethod-signatures -Wmisleading-indentation -Wmissing-braces -Wmissing-declarations -Wmissing-include-dirs -Wmissing-noreturn -Wmissing-prototypes -Wmove -Wnarrowing -Wnon-virtual-dtor -Wnull-dereference -Wnull-pointer-arithmetic -Wold-style-cast -Woverloaded-virtual -Wpacked -Wpacked-non-pod -Wparentheses -Wpointer-arith -Wrange-loop-analysis -Wredundant-move -Wredundant-parens -Wself-assign -Wself-move -Wshadow-all -Wsign-compare -Wsign-conversion -Wsometimes-uninitialized -Wstack-protector -Wstrict-overflow=5 -Wstrict-selector-match -Wsuggest-destructor-override -Wsuggest-override -Wswitch-default -Wswitch-enum -Wtautological-compare -Wtautological-constant-in-range-compare -Wthread-safety -Wthread-safety-beta -Wunaligned-access -Wundef -Wuninitialized -Wunreachable-code -Wunreachable-code-aggressive -Wunsequenced -Wunused -Wunused-macros -Wunused-parameter -Wunused-variable -Wweak-vtables -Wzero-as-null-pointer-constant",
        "COMPILE_DEFINITIONS": "_LIBCPP_ABI_FIX_CITYHASH_IMPLEMENTATION"
      }
    },
    {
      "name": "clang-coverage",
      "displayName": "Coverage with LLVM",
      "description": "Build with Clang and enable code coverage",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "OFF",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "FORFUN_COMMON_DEFINITIONS": "NDEBUG",
        "FORFUN_COMMON_CFLAGS": "-fcoverage-mapping -fprofile-instr-generate",
        "FORFUN_COMMON_CXXFLAGS": "-fcoverage-mapping -fprofile-instr-generate",
        "FORFUN_COMMON_LINK_OPTIONS": "-fcoverage-mapping -fprofile-instr-generate",
        "COMPILE_DEFINITIONS": "_LIBCPP_ABI_FIX_CITYHASH_IMPLEMENTATION"
      }
    },
    {
      "name": "gcc-coverage",
      "displayName": "Coverage with GCC",
      "description": "Build with GCC and enable code coverage",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "OFF",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "FORFUN_COMMON_DEFINITIONS": "NDEBUG",
        "FORFUN_COMMON_CFLAGS": "--coverage",
        "FORFUN_COMMON_CXXFLAGS": "--coverage",
        "FORFUN_COMMON_LINK_OPTIONS": "--coverage"
      }
    },
    {
      "name": "generic-single-config",
      "displayName": "Generic single configuration",
      "description": "Release all targets with debug information",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "ANTLR_BUILD_CPP_TESTS": "OFF",
        "BUILD_SHARED_LIBS": "OFF",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "OFF",
        "CMAKE_BUILD_TYPE": "RelWithDebInfo",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "FORFUN_BUILD_FUZZING_DRIVER": "ON",
        "FUZZTEST_FUZZING_MODE": "ON"
      }
    },
    {
      "name": "clang-sanitizers",
      "displayName": "Clang sanitizers",
      "description": "Build with Clang's AddressSanitizer and UndefinedBehaviorSanitizer",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "OFF",
        "CMAKE_C_FLAGS_RELWITHDEBINFO": "-O1 -g -DNDEBUG",
        "CMAKE_CXX_FLAGS_RELWITHDEBINFO": "-O1 -g -DNDEBUG",
        "CMAKE_C_FLAGS": "-fsanitize=undefined,float-divide-by-zero,local-bounds,vptr,nullability -fsanitize=address -fsanitize-address-use-after-return=always -fno-omit-frame-pointer -fno-sanitize-recover=all",
        "CMAKE_CXX_FLAGS": "-D_LIBCPP_ABI_FIX_CITYHASH_IMPLEMENTATION -fno-builtin-std-forward_like -fsanitize=undefined,float-divide-by-zero,local-bounds,vptr,nullability -fsanitize=address -fsanitize-address-use-after-return=always -fno-omit-frame-pointer -fno-sanitize-recover=all",
        "CMAKE_EXE_LINKER_FLAGS": "-fsanitize=undefined,float-divide-by-zero,local-bounds,vptr,nullability -fsanitize=address -fsanitize-address-use-after-return=always -fno-omit-frame-pointer -flto -fvisibility=default -fno-sanitize-recover=all",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "OFF",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_BUILD_TYPE": "RelWithDebInfo",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        }
      }
    }
  ],
  "buildPresets": [
    {
      "name": "generic-debug",
      "displayName": "Generic Debug",
      "description": "Generic Debug build",
      "configurePreset": "generic",
      "configuration": "Debug"
    },
    {
      "name": "generic-relwithdebinfo",
      "displayName": "Generic RelWithDebInfo",
      "description": "Generic RelWithDebInfo build",
      "configurePreset": "generic",
      "configuration": "RelWithDebInfo"
    },
    {
      "name": "generic-release",
      "displayName": "Generic Release",
      "description": "Generic Release build",
      "configurePreset": "generic",
      "configuration": "Release"
    },
    {
      "name": "windows-x64-debug",
      "displayName": "Windows x64 Debug",
      "description": "Windows x64 Debug build",
      "configurePreset": "windows-x64",
      "configuration": "Debug"
    },
    {
      "name": "windows-x64-release",
      "displayName": "Windows x64 Release",
      "description": "Windows x64 Release build",
      "configurePreset": "windows-x64",
      "configuration": "Release"
    },
    {
      "name": "strict-gcc-debug",
      "displayName": "GCC Debug",
      "description": "Debug build with GCC diagnostics",
      "configurePreset": "strict-gcc",
      "configuration": "Debug"
    },
    {
      "name": "strict-gcc-relwithdebinfo",
      "displayName": "GCC RelWithDebInfo",
      "description": "RelWithDebInfo build with GCC diagnostics",
      "configurePreset": "strict-gcc",
      "configuration": "RelWithDebInfo"
    },
    {
      "name": "strict-gcc-release",
      "displayName": "GCC release",
      "description": "Release build with GCC diagnostics",
      "configurePreset": "strict-gcc",
      "configuration": "Release"
    },
    {
      "name": "strict-clang-debug",
      "displayName": "Clang Debug",
      "description": "Debug build with Clang diagnostics",
      "configurePreset": "strict-clang",
      "configuration": "Debug"
    },
    {
      "name": "strict-clang-relwithdebinfo",
      "displayName": "Clang RelWithDebInfo",
      "description": "RelWithDebInfo build with Clang diagnostics",
      "configurePreset": "strict-clang",
      "configuration": "RelWithDebInfo"
    },
    {
      "name": "strict-clang-release",
      "displayName": "Clang Release",
      "description": "Release build with Clang diagnostics",
      "configurePreset": "strict-clang",
      "configuration": "Release"
    }
  ]
}
