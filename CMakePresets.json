{
  "version": 6,
  "configurePresets": [
    {
      "name": "generic",
      "displayName": "Generic",
      "description": "Generic build with Ninja Multi-Config and vcpkg",
      "generator": "Ninja Multi-Config",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "ON",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_CONFIGURATION_TYPES": "Release;RelWithDebInfo;Debug",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        }
      }
    },
    {
      "name": "windows-x64",
      "displayName": "Windows (x64)",
      "description": "Build with MSVC for x64 Windows",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "architecture": {
        "value": "x64",
        "strategy": "external"
      },
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "ON",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "ON",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS": "ON",
        "FORFUN_COMMON_CFLAGS": "/permissive- /source-charset:utf-8 /W4 /Zc:__cplusplus",
        "FORFUN_COMMON_CXXFLAGS": "/permissive- /source-charset:utf-8 /W4 /Zc:__cplusplus /Zc:enumTypes /Zc:preprocessor"
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Windows"
      }
    },
    {
      "name": "xcode",
      "displayName": "Xcode configuration",
      "description": "Build with Xcode for Darwin",
      "generator": "Xcode",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "ON",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "CMAKE_XCODE_XCCONFIG": {
          "value": "${sourceDir}/vendor/XcodeWarnings/XcodeWarnings.xcconfig",
          "type": "FILEPATH"
        },
        "FORFUN_COMMON_DEFINITIONS": "_LIBCPP_ABI_FIX_CITYHASH_IMPLEMENTATION"
      },
      "condition": {
        "type": "equals",
        "lhs": "${hostSystemName}",
        "rhs": "Darwin"
      }
    },
    {
      "name": "strict-gcc",
      "displayName": "Strict GCC options",
      "description": "Build with GCC and enable most GCC diagnostics",
      "generator": "Ninja Multi-Config",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "ON",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_CONFIGURATION_TYPES": "Release;RelWithDebInfo;Debug",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "FORFUN_COMMON_CFLAGS": "-Wall -Wextra -pedantic",
        "FORFUN_COMMON_CXXFLAGS": "-pedantic -Wall -Wcast-align=strict -Wcast-qual -Wchanges-meaning -Wconversion -Wconversion-null -Wctor-dtor-privacy -Wdangling-pointer -Wdangling-reference -Wdate-time -Wdelete-incomplete -Wdelete-non-virtual-dtor -Wdeprecated-copy -Wdeprecated-copy-dtor -Wdeprecated-enum-enum-conversion -Wdeprecated-enum-float-conversion -Wdisabled-optimization -Wdouble-promotion -Wduplicated-branches -Wduplicated-cond -Wexceptions -Wextra -Wformat=2 -Wimplicit-fallthrough=5 -Winaccessible-base -Winherited-variadic-ctor -Winit-list-lifetime -Winit-self -Winterference-size -Winvalid-constexpr -Winvalid-imported-macros -Winvalid-offsetof -Winvalid-pch -Winvalid-utf8 -Wlogical-op -Wmisleading-indentation -Wmismatched-new-delete -Wmismatched-tags -Wmissing-declarations -Wmissing-noreturn -Wmissing-requires -Wmissing-template-keyword -Wmultichar -Wmultiple-inheritance -Wnarrowing -Wnoexcept -Wnoexcept-type -Wnon-template-friend -Wnon-virtual-dtor -Wnull-dereference -Wold-style-cast -Wopenacc-parallelism -Woverlength-strings -Woverloaded-virtual -Wpacked -Wpacked-bitfield-compat -Wrange-loop-construct -Wredundant-decls -Wredundant-move -Wredundant-tags -Wregister -Wreorder -Wself-move -Wshadow -Wshift-negative-value -Wsign-conversion -Wsign-promo -Wsized-deallocation -Wstack-protector -Wstrict-null-sentinel -Wstrict-overflow -Wunused -Wunused-macros -Wuseless-cast -Wvariadic-macros -Wvector-operation-performance -Wvexing-parse -Wvirtual-inheritance -Wvirtual-move-assign -Wvla -Wvolatile -Wwrite-strings -Wzero-as-null-pointer-constant"
      }
    },
    {
      "name": "strict-clang",
      "displayName": "Strict Clang options",
      "description": "Build with Clang and enable most Clang diagnostics",
      "generator": "Ninja Multi-Config",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "ON",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_CONFIGURATION_TYPES": "Release;RelWithDebInfo;Debug",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "FORFUN_COMMON_CFLAGS": "-Wall -Wextra -pedantic",
        "FORFUN_COMMON_CXXFLAGS": "-pedantic -Wall -Wextra -Walloca -Wanon-enum-enum-conversion -Warc-maybe-repeated-use-of-weak -Warc-repeated-use-of-weak -Warray-bounds-pointer-arithmetic -Warray-parameter -Wassign-enum -Watomic-implicit-seq-cst -Watomic-properties -Wauto-decl-extensions -Wbad-function-cast -Wbit-int-extension -Wbitfield-enum-conversion -Wbitwise-op-parentheses -Wbool-conversion -Wbool-operation -Wcast-align -Wcast-function-type -Wcast-qual -Wchar-subscripts -Wcomma -Wcomment -Wcompletion-handler -Wcomplex-component-init -Wcompound-token-split -Wconditional-uninitialized -Wconsumed -Wconversion -Wcovered-switch-default -Wctor-dtor-privacy -Wcustom-atomic-properties -Wdate-time -Wdeclaration-after-statement -Wdelete-incomplete -Wdelete-non-virtual-dtor -Wdeprecated -Wdirect-ivar-access -Wdisabled-optimization -Wdocumentation -Wdocumentation-pedantic -Wdouble-promotion -Wdtor-name -Wduplicate-decl-specifier -Wduplicate-enum -Wduplicate-method-arg -Wduplicate-method-match -Wdynamic-exception-spec -Wembedded-directive -Wempty-translation-unit -Wenum-compare-conditional -Wenum-conversion -Wexceptions -Wexit-time-destructors -Wexpansion-to-defined -Wexplicit-ownership-type -Wextra-semi-stmt -Wextra-tokens -Wfatal-errors -Wflexible-array-extensions -Wfloat-equal -Wfloat-overflow-conversion -Wfloat-zero-conversion -Wfor-loop-analysis -Wformat=2 -Wfour-char-constants -Wframe-address -Wfunction-effects -Wglobal-constructors -Wheader-hygiene -Widiomatic-parentheses -Wimplicit -Wimplicit-atomic-properties -Wimplicit-fallthrough -Wimplicit-float-conversion -Wimplicit-int-conversion -Wimplicit-int-float-conversion -Wimplicit-retain-self -Winaccessible-base -Wincompatible-function-pointer-types-strict -Winconsistent-missing-destructor-override -Winfinite-recursion -Winit-self -Winline -Wint-in-bool-context -Winvalid-constexpr -Winvalid-offsetof -Winvalid-or-nonexistent-directory -Winvalid-pch -Winvalid-utf8 -Wkeyword-macro -Wlanguage-extension-token -Wliteral-conversion -Wliteral-range -Wlogical-op-parentheses -Wloop-analysis -Wmain -Wmain-return-type -Wmax-tokens -Wmethod-signatures -Wmisleading-indentation -Wmismatched-new-delete -Wmismatched-tags -Wmissing-braces -Wmissing-declarations -Wmissing-include-dirs -Wmissing-noreturn -Wmissing-prototypes -Wmissing-variable-declarations -Wmost -Wmove -Wmultichar -Wnarrowing -Wnested-anon-types -Wnewline-eof -Wnon-gcc -Wnon-modular-include-in-framework-module -Wnon-modular-include-in-module -Wnon-virtual-dtor -Wnonportable-private-system-apinotes-path -Wnonportable-system-include-path -Wnull-dereference -Wnull-pointer-arithmetic -Wnullable-to-nonnull-conversion -Wold-style-cast -Wover-aligned -Woverlength-strings -Woverloaded-virtual -Woverriding-method-mismatch -Wpacked -Wpacked-non-pod -Wparentheses -Wpartial-availability -Wpessimizing-move -Wpointer-arith -Wpoison-system-directories -Wpragma-pack -Wpragma-pack-suspicious-include -Wpragmas -Wquoted-include-in-framework-header -Wrange-loop-analysis -Wrange-loop-construct -Wreceiver-forward-class -Wredundant-decls -Wredundant-move -Wredundant-move -Wredundant-parens -Wregister -Wreorder -Wreserved-identifier -Wretained-language-linkage -Wselector -Wself-assign -Wself-assign-overloaded -Wself-move -Wsemicolon-before-method-body -Wshadow-all -Wshift-negative-value -Wshift-sign-overflow -Wshorten-64-to-32 -Wsign-compare -Wsign-conversion -Wsign-promo -Wsometimes-uninitialized -Wstack-protector -Wstatic-in-inline -Wstrict-overflow=5 -Wstrict-potentially-direct-selector -Wstrict-prototypes -Wstrict-selector-match -Wstring-concatenation -Wstring-conversion -Wsuggest-destructor-override -Wsuggest-override -Wsuper-class-method-mismatch -Wswitch-default -Wswitch-enum -Wtautological-compare -Wtautological-constant-in-range-compare -Wthread-safety -Wthread-safety-beta -Wthread-safety-negative -Wthread-safety-reference-return -Wunaligned-access -Wundeclared-selector -Wundef -Wundef-prefix -Wundefined-func-template -Wundefined-internal-type -Wundefined-reinterpret-cast -Wunguarded-availability -Wuninitialized -Wunknown-pragmas -Wunneeded-internal-declaration -Wunneeded-member-function -Wunreachable-code -Wunreachable-code-aggressive -Wunusable-partial-specialization -Wunused -Wunused-macros -Wused-but-marked-unused -Wvariadic-macros -Wvariadic-macros -Wvector-conversion -Wvexing-parse -Wvla -Wweak-vtables -Wwrite-strings -Wzero-as-null-pointer-constant -Wzero-as-null-pointer-constant -Wzero-length-array"
      }
    },
    {
      "name": "clang-coverage",
      "displayName": "Coverage with LLVM",
      "description": "Build with Clang and enable code coverage",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "OFF",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "FORFUN_COMMON_DEFINITIONS": "NDEBUG",
        "FORFUN_COMMON_CFLAGS": "-fcoverage-mapping -fprofile-instr-generate",
        "FORFUN_COMMON_CXXFLAGS": "-fcoverage-mapping -fprofile-instr-generate",
        "FORFUN_COMMON_LINK_OPTIONS": "-fcoverage-mapping -fprofile-instr-generate"
      }
    },
    {
      "name": "gcc-coverage",
      "displayName": "Coverage with GCC",
      "description": "Build with GCC and enable code coverage",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "OFF",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_BUILD_TYPE": "Debug",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "FORFUN_COMMON_DEFINITIONS": "NDEBUG",
        "FORFUN_COMMON_CFLAGS": "--coverage",
        "FORFUN_COMMON_CXXFLAGS": "--coverage",
        "FORFUN_COMMON_LINK_OPTIONS": "--coverage"
      }
    },
    {
      "name": "generic-single-config",
      "displayName": "Generic single configuration",
      "description": "Release all targets with debug information",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "ANTLR_BUILD_CPP_TESTS": "OFF",
        "BUILD_SHARED_LIBS": "OFF",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "OFF",
        "CMAKE_BUILD_TYPE": "RelWithDebInfo",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "FORFUN_BUILD_FUZZING_DRIVER": "ON",
        "FUZZTEST_FUZZING_MODE": "ON"
      }
    },
    {
      "name": "clang-sanitizers",
      "displayName": "Clang sanitizers",
      "description": "Build with Clang's AddressSanitizer and UndefinedBehaviorSanitizer",
      "generator": "Ninja",
      "binaryDir": "${sourceDir}/out/build/${presetName}",
      "installDir": "${sourceDir}/out/install/${presetName}",
      "cacheVariables": {
        "BUILD_SHARED_LIBS": "OFF",
        "CMAKE_COMPILE_WARNING_AS_ERROR": "OFF",
        "CMAKE_BUILD_TYPE": "RelWithDebInfo",
        "CMAKE_TOOLCHAIN_FILE": {
          "value": "${sourceDir}/vcpkg/scripts/buildsystems/vcpkg.cmake",
          "type": "FILEPATH"
        },
        "FORFUN_COMMON_CFLAGS": "-O1 -g -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -fno-sanitize-recover",
        "FORFUN_COMMON_CXXFLAGS": "-O1 -g -fsanitize=address -fsanitize=undefined -fno-omit-frame-pointer -fno-sanitize-recover",
        "FORFUN_COMMON_DEFINITIONS": "NDEBUG",
        "FORFUN_COMMON_LINK_OPTIONS": "-fsanitize=address -fsanitize=undefined -flto -fvisibility=default"
      }
    }
  ],
  "buildPresets": [
    {
      "name": "generic-debug",
      "displayName": "Generic Debug",
      "description": "Generic Debug build",
      "configurePreset": "generic",
      "configuration": "Debug"
    },
    {
      "name": "generic-relwithdebinfo",
      "displayName": "Generic RelWithDebInfo",
      "description": "Generic RelWithDebInfo build",
      "configurePreset": "generic",
      "configuration": "RelWithDebInfo"
    },
    {
      "name": "generic-release",
      "displayName": "Generic Release",
      "description": "Generic Release build",
      "configurePreset": "generic",
      "configuration": "Release"
    },
    {
      "name": "windows-x64-debug",
      "displayName": "Windows x64 Debug",
      "description": "Windows x64 Debug build",
      "configurePreset": "windows-x64",
      "configuration": "Debug"
    },
    {
      "name": "windows-x64-release",
      "displayName": "Windows x64 Release",
      "description": "Windows x64 Release build",
      "configurePreset": "windows-x64",
      "configuration": "Release"
    },
    {
      "name": "strict-gcc-debug",
      "displayName": "GCC Debug",
      "description": "Debug build with GCC diagnostics",
      "configurePreset": "strict-gcc",
      "configuration": "Debug"
    },
    {
      "name": "strict-gcc-relwithdebinfo",
      "displayName": "GCC RelWithDebInfo",
      "description": "RelWithDebInfo build with GCC diagnostics",
      "configurePreset": "strict-gcc",
      "configuration": "RelWithDebInfo"
    },
    {
      "name": "strict-gcc-release",
      "displayName": "GCC release",
      "description": "Release build with GCC diagnostics",
      "configurePreset": "strict-gcc",
      "configuration": "Release"
    },
    {
      "name": "strict-clang-debug",
      "displayName": "Clang Debug",
      "description": "Debug build with Clang diagnostics",
      "configurePreset": "strict-clang",
      "configuration": "Debug"
    },
    {
      "name": "strict-clang-relwithdebinfo",
      "displayName": "Clang RelWithDebInfo",
      "description": "RelWithDebInfo build with Clang diagnostics",
      "configurePreset": "strict-clang",
      "configuration": "RelWithDebInfo"
    },
    {
      "name": "strict-clang-release",
      "displayName": "Clang Release",
      "description": "Release build with Clang diagnostics",
      "configurePreset": "strict-clang",
      "configuration": "Release"
    }
  ]
}
